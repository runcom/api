package v1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ContainerRuntimeConfig = map[string]string{
	"": "ContainerRuntimeConfig describes a customized Container Runtime configuration.",
}

func (ContainerRuntimeConfig) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfig
}

var map_ContainerRuntimeConfigCondition = map[string]string{
	"":                   "ContainerRuntimeConfigCondition defines the state of the ContainerRuntimeConfig",
	"type":               "type specifies the state of the operator's reconciliation functionality.",
	"status":             "status of the condition, one of True, False, Unknown.",
	"lastTransitionTime": "lastTransitionTime is the time of the last update to the current status object.",
	"reason":             "reason is the reason for the condition's last transition.  Reasons are CamelCase",
	"message":            "message provides additional information about the current condition. This is only to be consumed by humans.",
}

func (ContainerRuntimeConfigCondition) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfigCondition
}

var map_ContainerRuntimeConfigList = map[string]string{
	"": "ContainerRuntimeConfigList is a list of ContainerRuntimeConfig resources",
}

func (ContainerRuntimeConfigList) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfigList
}

var map_ContainerRuntimeConfigSpec = map[string]string{
	"": "ContainerRuntimeConfigSpec defines the desired state of ContainerRuntimeConfig",
}

func (ContainerRuntimeConfigSpec) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfigSpec
}

var map_ContainerRuntimeConfigStatus = map[string]string{
	"":                   "ContainerRuntimeConfigStatus defines the observed state of a ContainerRuntimeConfig",
	"observedGeneration": "The generation observed by the controller.",
	"conditions":         "Represents the latest available observations of current state.",
}

func (ContainerRuntimeConfigStatus) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfigStatus
}

var map_ContainerRuntimeConfiguration = map[string]string{
	"": "ContainerRuntimeConfiguration defines the tuneables of the container runtime",
}

func (ContainerRuntimeConfiguration) SwaggerDoc() map[string]string {
	return map_ContainerRuntimeConfiguration
}

var map_ControllerConfig = map[string]string{
	"": "ControllerConfig describes configuration for MachineConfigController. This is currently only used to drive the machineconfigs generated by the TemplateController.",
}

func (ControllerConfig) SwaggerDoc() map[string]string {
	return map_ControllerConfig
}

var map_ControllerConfigList = map[string]string{
	"": "ControllerConfigList is a list of ControllerConfig resources",
}

func (ControllerConfigList) SwaggerDoc() map[string]string {
	return map_ControllerConfigList
}

var map_ControllerConfigSpec = map[string]string{
	"":           "ControllerConfigSpec is the spec for ControllerConfig resource.",
	"platform":   "The openshift platform, e.g. \"libvirt\", \"openstack\", \"aws\", or \"none\"",
	"etcdCAData": "CAs",
	"pullSecret": "PullSecret is the default pull secret that needs to be installed on all machines.",
	"images":     "Images is map of images that are used by the controller.",
	"osImageURL": "Sourced from configmap/machine-config-osimageurl",
}

func (ControllerConfigSpec) SwaggerDoc() map[string]string {
	return map_ControllerConfigSpec
}

var map_ControllerConfigStatus = map[string]string{
	"":                   "ControllerConfigStatus is the status for ControllerConfig",
	"observedGeneration": "The generation observed by the controller.",
	"conditions":         "Represents the latest available observations of current state.",
}

func (ControllerConfigStatus) SwaggerDoc() map[string]string {
	return map_ControllerConfigStatus
}

var map_ControllerConfigStatusCondition = map[string]string{
	"":                   "ControllerConfigStatusCondition contains condition information for ControllerConfigStatus",
	"type":               "type specifies the state of the operator's reconciliation functionality.",
	"status":             "status of the condition, one of True, False, Unknown.",
	"lastTransitionTime": "lastTransitionTime is the time of the last update to the current status object.",
	"reason":             "reason is the reason for the condition's last transition.  Reasons are CamelCase",
	"message":            "message provides additional information about the current condition. This is only to be consumed by humans.",
}

func (ControllerConfigStatusCondition) SwaggerDoc() map[string]string {
	return map_ControllerConfigStatusCondition
}

var map_KubeletConfig = map[string]string{
	"": "KubeletConfig describes a customized Kubelet configuration.",
}

func (KubeletConfig) SwaggerDoc() map[string]string {
	return map_KubeletConfig
}

var map_KubeletConfigCondition = map[string]string{
	"":                   "KubeletConfigCondition defines the state of the KubeletConfig",
	"type":               "type specifies the state of the operator's reconciliation functionality.",
	"status":             "status of the condition, one of True, False, Unknown.",
	"lastTransitionTime": "lastTransitionTime is the time of the last update to the current status object.",
	"reason":             "reason is the reason for the condition's last transition.  Reasons are CamelCase",
	"message":            "message provides additional information about the current condition. This is only to be consumed by humans.",
}

func (KubeletConfigCondition) SwaggerDoc() map[string]string {
	return map_KubeletConfigCondition
}

var map_KubeletConfigList = map[string]string{
	"": "KubeletConfigList is a list of KubeletConfig resources",
}

func (KubeletConfigList) SwaggerDoc() map[string]string {
	return map_KubeletConfigList
}

var map_KubeletConfigSpec = map[string]string{
	"": "KubeletConfigSpec defines the desired state of KubeletConfig",
}

func (KubeletConfigSpec) SwaggerDoc() map[string]string {
	return map_KubeletConfigSpec
}

var map_KubeletConfigStatus = map[string]string{
	"":                   "KubeletConfigStatus defines the observed state of a KubeletConfig",
	"observedGeneration": "The generation observed by the controller.",
	"conditions":         "Represents the latest available observations of current state.",
}

func (KubeletConfigStatus) SwaggerDoc() map[string]string {
	return map_KubeletConfigStatus
}

var map_MCOConfig = map[string]string{
	"": "MCOConfig describes configuration for MachineConfigOperator.",
}

func (MCOConfig) SwaggerDoc() map[string]string {
	return map_MCOConfig
}

var map_MCOConfigList = map[string]string{
	"": "MCOConfigList is a list of MCOConfig resources",
}

func (MCOConfigList) SwaggerDoc() map[string]string {
	return map_MCOConfigList
}

var map_MCOConfigSpec = map[string]string{
	"": "MCOConfigSpec is the spec for MCOConfig resource.",
}

func (MCOConfigSpec) SwaggerDoc() map[string]string {
	return map_MCOConfigSpec
}

var map_MachineConfigPool = map[string]string{
	"": "MachineConfigPool describes a pool of MachineConfigs.",
}

func (MachineConfigPool) SwaggerDoc() map[string]string {
	return map_MachineConfigPool
}

var map_MachineConfigPoolCondition = map[string]string{
	"":                   "MachineConfigPoolCondition contains condition information for an MachineConfigPool.",
	"type":               "Type of the condition, currently ('Done', 'Updating', 'Failed').",
	"status":             "Status of the condition, one of ('True', 'False', 'Unknown').",
	"lastTransitionTime": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
	"reason":             "Reason is a brief machine readable explanation for the condition's last transition.",
	"message":            "Message is a human readable description of the details of the last transition, complementing reason.",
}

func (MachineConfigPoolCondition) SwaggerDoc() map[string]string {
	return map_MachineConfigPoolCondition
}

var map_MachineConfigPoolList = map[string]string{
	"": "MachineConfigPoolList is a list of MachineConfigPool resources",
}

func (MachineConfigPoolList) SwaggerDoc() map[string]string {
	return map_MachineConfigPoolList
}

var map_MachineConfigPoolSpec = map[string]string{
	"":                      "MachineConfigPoolSpec is the spec for MachineConfigPool resource.",
	"machineConfigSelector": "Label selector for MachineConfigs. Refer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ on how label and selectors work.",
	"nodeSelector":          "Node selector for Machines",
	"paused":                "If true, changes to this machine config pool should be stopped. This includes generating new desiredMachineConfig and update of machines.",
	"maxUnavailable":        "MaxUnavailable specifies the percentage or constant number of machines that can be updating at any given time. default is 1.",
}

func (MachineConfigPoolSpec) SwaggerDoc() map[string]string {
	return map_MachineConfigPoolSpec
}

var map_MachineConfigPoolStatus = map[string]string{
	"":                        "MachineConfigPoolStatus is the status for MachineConfigPool resource.",
	"observedGeneration":      "The generation observed by the controller.",
	"configuration":           "The current MachineConfig object for the machine config pool.",
	"machineCount":            "Total number of machines in the machine config pool.",
	"updatedMachineCount":     "Total number of machines targeted by the pool that have the CurrentMachineConfig as their config.",
	"readyMachineCount":       "Total number of ready machines targeted by the pool.",
	"unavailableMachineCount": "Total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.",
	"degradedMachineCount":    "Total number of machines marked degraded (or unreconcilable). A node is marked degraded if applying a configuration failed..",
	"conditions":              "Represents the latest available observations of current state.",
}

func (MachineConfigPoolStatus) SwaggerDoc() map[string]string {
	return map_MachineConfigPoolStatus
}

var map_MachineConfigPoolStatusConfiguration = map[string]string{
	"":       "MachineConfigPoolStatusConfiguration stores the current configuration for the pool, and optionally also stores the list of machineconfig objects used to generate the configuration.",
	"source": "source is the list of machineconfigs that were used to generate the single machineconfig object specified in `content`.",
}

func (MachineConfigPoolStatusConfiguration) SwaggerDoc() map[string]string {
	return map_MachineConfigPoolStatusConfiguration
}

// AUTO-GENERATED FUNCTIONS END HERE
